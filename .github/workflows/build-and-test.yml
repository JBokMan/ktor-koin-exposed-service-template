name: Build And Test

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_test:
    name: Build And Test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Add runner to docker group
        run: sudo usermod -aG docker $USER

      - name: Start Docker
        run: sudo systemctl start docker

      - name: Install docker-compose (if needed)
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Set TESTCONTAINERS_DOCKER_COMPOSE_COMMAND
        run: echo "TESTCONTAINERS_DOCKER_COMPOSE_COMMAND=docker compose" >> $GITHUB_ENV

      - name: Start Services
        run: docker compose up -d --wait

      - name: Set up JDK 21
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.4.1

      - name: Restore Gradle Build Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Ensure Docker Compose is installed
        run: docker compose version || docker-compose version

      - name: Build and Test with Gradle
        run: ./gradlew build --no-daemon --parallel --build-cache --scan

      - name: Show Docker Compose logs on failure
        if: failure()
        run: docker compose logs

      - name: Stop Services
        if: always()
        run: docker compose down
